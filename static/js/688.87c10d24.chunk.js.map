{"version":3,"file":"static/js/688.87c10d24.chunk.js","mappings":"sQAEaA,EAAkBC,EAAAA,GAAAA,OAAH,icAmBfC,EAAaD,EAAAA,GAAAA,KAAH,8KAUVE,EAAmBF,EAAAA,GAAAA,OAAH,4ZAkBhBG,EAAwBH,EAAAA,GAAAA,KAAH,6MAWrBI,EAAkBJ,EAAAA,GAAAA,MAAH,2P,SCjDb,SAASK,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAClC,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAiBA,OACE,SAACV,EAAD,WACE,UAACE,EAAD,CAAYS,SAbK,SAAAC,GAGnB,GAFAA,EAAEC,iBAEyB,KAAvBJ,EAAYK,OACd,OAAOC,EAAAA,GAAAA,MAAY,+HAGrBR,EAASE,GACTC,EAAe,GAChB,EAIG,WACE,SAACP,EAAD,CAAkBa,KAAK,SAAvB,UACE,SAACZ,EAAD,wBAGF,SAACC,EAAD,CACEW,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,SACZC,MAAOX,EACPF,SA5BkB,SAAAK,GACxBF,EAAeE,EAAES,cAAcD,MAAME,cACtC,QA+BF,C,uBC1Cc,SAASC,IAAU,IAAD,EACzBC,GAAWC,EAAAA,EAAAA,MAEjB,GAA4BjB,EAAAA,EAAAA,UAAS,IAArC,eAAOkB,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAC3C,GAAsCxB,EAAAA,EAAAA,UAASuB,GAA/C,eAAOtB,EAAP,KAAoBC,EAApB,MAEAuB,EAAAA,EAAAA,YAAU,WCXG,IAA0BC,EDYhCzB,ICZgCyB,EDepBzB,ECdZ0B,IAAAA,IAAA,6IACiID,KDaxGE,MAAK,SAAAC,GACjCV,EAAUU,EAASC,KAAKC,QACzB,GACF,GAAE,CAAC9B,IAMJ,OACE,+BACE,6BACE,SAACH,EAAD,CAAWC,SAPQ,SAAAE,GACvBC,EAAeD,GACfqB,EAAgC,KAAhBrB,EAAqB,CAAEsB,MAAOtB,GAAgBsB,EAC/D,IAKML,EAAOc,OAAS,IACf,wBACGd,EAAOe,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAMtB,GAAlC,SACGmB,KAFID,EADC,OAShB,SAAC,KAAD,QAIP,C","sources":["components/SearchBar/SearchBar.module.jsx","components/SearchBar/SearchBar.jsx","components/Movies/Movies.jsx","Services/SearchMovies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SearchBarHeader = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://svgsilh.com/svg/308581.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n`;\nexport const SearchFormButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {\n  SearchBarHeader,\n  SearchForm,\n  SearchFormButton,\n  SearchFormButtonLabel,\n  SearchFormInput,\n} from './SearchBar.module';\n\nexport default function SearchBar({ onChange }) {\n  const [searchImage, setSearchImage] = useState('');\n\n  const handleImageChange = e => {\n    setSearchImage(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (searchImage.trim() === '') {\n      return toast.error('Введите в строке поиска');\n    }\n\n    onChange(searchImage);\n    setSearchImage('');\n  };\n\n  return (\n    <SearchBarHeader>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchFormButton type=\"submit\">\n          <SearchFormButtonLabel>Search</SearchFormButtonLabel>\n        </SearchFormButton>\n\n        <SearchFormInput\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search\"\n          value={searchImage}\n          onChange={handleImageChange}\n        />\n      </SearchForm>\n    </SearchBarHeader>\n  );\n}\n","import { Link, Outlet, useLocation, useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport fetchQueryMovies from 'Services/SearchMovies';\n\nexport default function Movies() {\n  const location = useLocation();\n\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const [searchImage, setSearchImage] = useState(query);\n\n  useEffect(() => {\n    if (!searchImage) {\n      return;\n    }\n    fetchQueryMovies(searchImage).then(response => {\n      setMovies(response.data.results);\n    });\n  }, [searchImage]);\n\n  const handleFormSubmit = searchImage => {\n    setSearchImage(searchImage);\n    setSearchParams(searchImage !== '' ? { query: searchImage } : query);\n  };\n  return (\n    <>\n      <main>\n        <SearchBar onChange={handleFormSubmit} />\n        {movies.length > 0 && (\n          <ul>\n            {movies.map(({ id, title }) => (\n              <li key={id}>\n                <Link to={`${id}`} state={{ from: location }}>\n                  {title}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        )}\n        <Outlet />\n      </main>\n    </>\n  );\n}\n","import axios from 'axios';\n\nexport default function fetchQueryMovies(name) {\n  return axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=ff98b74c6ada2972698b8eff6707845a&language=en-US&page=1&include_adult=false&query=${name}`\n  );\n}\n"],"names":["SearchBarHeader","styled","SearchForm","SearchFormButton","SearchFormButtonLabel","SearchFormInput","SearchBar","onChange","useState","searchImage","setSearchImage","onSubmit","e","preventDefault","trim","toast","type","autoComplete","autoFocus","placeholder","value","currentTarget","toLowerCase","Movies","location","useLocation","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","useEffect","name","axios","then","response","data","results","length","map","id","title","to","state","from"],"sourceRoot":""}